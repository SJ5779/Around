{"version":3,"sources":["assets/images/logo.svg","assets/images/blue-marker.svg","components/TopBar.js","constants.js","components/Register.js","components/Login.js","components/Gallery.js","components/CreatePostForm.js","components/CreatePostButton.js","components/AroundMarker.js","components/AroundMap.js","components/Home.js","components/Main.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","TopBar","className","src","logo","alt","this","props","isLoggedIn","onClick","handleLogout","type","Component","TOKEN_KEY","API_ROOT","GEO_OPTIONS","enableHighAccuracy","maximumAge","timeout","POST_TYPE_VIDEO","POST_TYPE_UNKNOWN","RegistrationForm","state","confirmDirty","autoCompleteResult","handleConfirmBlur","e","value","target","setState","compareToFirstPassword","rule","callback","form","getFieldValue","validateToNextPassword","validateFields","force","handleSubmit","preventDefault","err","values","console","log","fetch","method","body","JSON","stringify","username","password","then","response","ok","text","Error","statusText","data","message","success","catch","error","getFieldDecorator","labelCol","xs","span","sm","wrapperCol","onSubmit","Item","label","rules","required","hasFeedback","validator","Password","onBlur","offset","htmlType","Link","to","Register","Form","create","name","NormalLoginForm","stateText","handleLoginSucceed","prefix","style","color","placeholder","Login","Gallery","images","map","image","customOverlay","user","caption","backdropClosesModal","enableImageSelection","NormalCreatePostForm","normFile","Array","isArray","fileList","beforeUpload","valuePropName","getValueFromEvent","Dragger","React","CreatePostForm","CreatePostButton","visible","confirmLoading","showModal","handleOk","token","localStorage","getItem","parse","lat","lon","formData","FormData","set","originFileObj","headers","Authorization","loadNearbyPosts","resetFields","handleCancel","getFormRef","formInstance","title","onOk","okText","onCancel","ref","AroundMarker","isOpen","handleToggle","prevState","post","url","location","isImagePost","customIcon","undefined","blueMarkerUrl","scaledSize","window","google","maps","Size","position","lng","onMouseOver","onMouseOut","icon","controls","NormalAroundMap","getMapRef","mapInstance","reloadMarker","center","getCenter","radius","getRadius","loadPostsByTopic","bounds","getBounds","ne","getNorthEast","right","LatLng","geometry","spherical","computeDistanceBetween","defaultZoom","defaultCenter","onDragEnd","onZoomChanged","posts","key","AroundMap","withScriptjs","withGoogleMap","TabPane","Tabs","Home","isLoadingGeoLocation","isLoadingPosts","onSuccessLoadGeoLocation","coords","latitude","longitude","setItem","onFailedLoadGeoLocation","json","handleTopicChange","topic","loadFacesAroundTheWolrd","navigator","geolocation","getCurrentPosition","filter","thumbnail","thumbnailWidth","thumbnailHeight","gutter","includes","tip","length","renderImagePosts","renderVideoPosts","operations","Group","onChange","tabBarExtraContent","tab","renderPosts","googleMapURL","loadingElement","height","containerElement","mapElement","Main","getLogin","Redirect","getHome","Switch","Route","path","render","component","App","Boolean","removeItem","hostname","match","ReactDOM","BrowserRouter","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.10a8e461.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/blue-marker.bc8cc4ea.svg\";","import React, {Component} from 'react';\nimport { Icon } from 'antd';\nimport logo from '../assets/images/logo.svg';\n\nclass TopBar extends Component {\n   render() {\n       return (\n           <header className=\"App-header\">\n               <img src={logo} alt=\"logo\" className=\"App-logo\"/>\n               <span className=\"App-title\">Around</span>\n               {this.props.isLoggedIn ?\n                   <a className=\"logout\" onClick={this.props.handleLogout} >\n                       <Icon type=\"logout\"/>{''}Logout\n                   </a> : null }\n\n           </header>\n       );\n   }\n}\n\nexport default TopBar;\n","\nexport const TOKEN_KEY = 'TOKEN_KEY';\nexport const API_ROOT = \"https://around-dot-around-179500.appspot.com/api/v1\";\nexport const GEO_OPTIONS = {\n    enableHighAccuracy: true,\n    maximumAge        : 300000,\n    timeout           : 27000,\n };\nexport const POS_KEY = 'POS_KEY';\nexport const AUTH_HEADER = 'Bearer';\n\nexport const POST_TYPE_IMAGE = 'image';\nexport const POST_TYPE_VIDEO = 'video';\nexport const POST_TYPE_UNKNOWN = 'unknown';\n\nexport const TOPIC_AROUND = 'around';\nexport const TOPIC_FACE = 'face';\n","import React, {Component} from 'react';\nimport { Form, Input, Button, message } from 'antd';\nimport { API_ROOT } from '../constants';\nimport { Link } from 'react-router-dom';\n\nclass RegistrationForm extends Component {\n   state = {\n       confirmDirty: false,\n       autoCompleteResult: [],\n   };\n\n   handleConfirmBlur = e => {\n       const { value } = e.target;\n       this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n   };\n\n   compareToFirstPassword = (rule, value, callback) => {\n       const { form } = this.props;\n       if (value && value !== form.getFieldValue('password')) {\n           callback('Two passwords that you enter is inconsistent!');\n       } else {\n           callback();\n       }\n   };\n   validateToNextPassword = (rule, value, callback) => {\n    const { form } = this.props;\n    if (value && this.state.confirmDirty) {\n        form.validateFields(['confirm'], { force: true });\n    }\n    callback();\n};\n\nhandleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n        if (!err) {\n            console.log('Received values of form: ', values);\n            fetch(`${API_ROOT}/signup`, {\n                method: 'POST',\n                body: JSON.stringify({\n                    username: values.username,\n                    password: values.password,\n                }),\n            })\n                .then((response) => {\n                    if (response.ok) {\n                        return response.text();\n                    }\n                    throw new Error(response.statusText);\n                })\n                .then((data) => {\n                    console.log('===== ',data);\n                    message.success('Registration succeed!');\n                })\n                .catch((err) => {\n                    console.error(err);\n                    message.error('Registration failed.');\n                });\n        }\n    });\n};\n\nrender() {\n    const { getFieldDecorator } = this.props.form;\n\n    const formItemLayout = {\n        labelCol: {\n            xs: { span: 24 },\n            sm: { span: 8 },\n        },\n        wrapperCol: {\n            xs: { span: 24 },\n            sm: { span: 16 },\n        },\n    };\n    const tailFormItemLayout = {\n        wrapperCol: {\n            xs: {\n                span: 24,\n                offset: 0,\n            },\n            sm: {\n                span: 16,\n                offset: 8,\n            },\n        },\n    };\n\n    return (\n        <Form {...formItemLayout} onSubmit={this.handleSubmit} className=\"register\">\n            <Form.Item\n                label=\"Username\"\n            >\n                {getFieldDecorator('username', {\n                    rules: [{ required: true, message: 'Please input your username!' }],\n                })(<Input />)}\n            </Form.Item>\n            <Form.Item label=\"Password\" hasFeedback>\n                {getFieldDecorator('password', {\n                    rules: [\n                        {\n                            required: true,\n                            message: 'Please input your password!',\n                        },\n                        {\n                            validator: this.validateToNextPassword,\n                        },\n                    ],\n                })(<Input.Password />)}\n            </Form.Item>\n            <Form.Item label=\"Confirm Password\" hasFeedback>\n                {getFieldDecorator('confirm', {\n                    rules: [\n                        {\n                            required: true,\n                            message: 'Please confirm your password!',\n                        },\n                        {\n                            validator: this.compareToFirstPassword,\n                        },\n                    ],\n                })(<Input.Password onBlur={this.handleConfirmBlur} />)}\n            </Form.Item>\n            <Form.Item {...tailFormItemLayout}>\n                <Button type=\"primary\" htmlType=\"submit\">\n                    Register\n                </Button>\n                <p>I already have an account, go back to <Link to=\"/login\">login</Link></p>\n            </Form.Item>\n        </Form>\n    );\n}\n}\n\nexport const Register = Form.create({ name: 'register' })(RegistrationForm);\n","import React, {Component} from 'react';\nimport { Form, Icon, Input, Button, message } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { API_ROOT } from '../constants';\n\nclass NormalLoginForm extends Component {\n   handleSubmit = e => {\n       e.preventDefault();\n       this.props.form.validateFields((err, values) => {\n           if (!err) {\n               console.log('Received values of form: ', values);\n               fetch(`${API_ROOT}/login`, {\n                   method: 'POST',\n                   body: JSON.stringify({\n                       username: values.username,\n                       password: values.password,\n                   }),\n               })\n                   .then((response) => {\n                       if (response.ok) {\n                           return response.text();\n                       }\n                       throw new Error(response.stateText);\n                   })\n                   .then((data) => {\n                       console.log(data);\n\n                       //step4: 登录成功，保存token -> 用于实现持久登录\n                      \n                       this.props.handleLoginSucceed(data);\n                       message.success('Login succeed!');\n                   })\n                   .catch((err) => {\n                       console.error(err);\n                       message.error('Login failed.');\n                   });\n           }\n       });\n   };\n\n   render() {\n       const { getFieldDecorator } = this.props.form;\n       return (\n           <Form onSubmit={this.handleSubmit} className=\"login-form\">\n               <Form.Item>\n                   {getFieldDecorator('username', {\n                       rules: [{ required: true, message: 'Please input your username!' }],\n                    })(\n                       <Input\n                           prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                           placeholder=\"Username\"\n                       />,\n                   )}\n               </Form.Item>\n               <Form.Item>\n                   {getFieldDecorator('password', {\n                       rules: [{ required: true, message: 'Please input your Password!' }],\n                   })(\n                       <Input\n                           prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                           type=\"password\"\n                           placeholder=\"Password\"\n                       />,\n                   )}\n               </Form.Item>\n               <Form.Item>\n                   <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                       Log in\n                   </Button>\n                   Or <Link to=\"/register\">register now!</Link>\n               </Form.Item>\n           </Form>\n       );\n   }\n}\n\nexport const Login = Form.create({ name: 'normal_login' })(NormalLoginForm);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport GridGallery from 'react-grid-gallery';\n\n\n\nclass Gallery extends Component {\n    static propTypes = {\n        images: PropTypes.arrayOf(\n            PropTypes.shape({\n                user: PropTypes.string.isRequired,\n                src: PropTypes.string.isRequired,\n                thumbnail: PropTypes.string.isRequired,\n                caption: PropTypes.string,\n                thumbnailWidth: PropTypes.number.isRequired,\n                thumbnailHeight: PropTypes.number.isRequired\n            })\n        ).isRequired\n    }\n \n\n    render() {\n        const images = this.props.images.map((image) => {\n            return {\n                ...image,\n                customOverlay: (\n                    <div className=\"gallery-thumbnail\">\n                        <div>{`${image.user}: ${image.caption}`}</div>\n                    </div>\n                ),\n            };\n        });\n \n\n        return (\n            <div className=\"gallery\">\n            <GridGallery\n                backdropClosesModal\n                images={images}\n                enableImageSelection={false}/>\n            </div>\n\n        );\n    }\n}\n\nexport default Gallery;","import React, { Component } from 'react';\nimport { Form, Input, Upload, Icon } from 'antd';\n\n\nclass NormalCreatePostForm extends React.Component {\n    normFile = e => {\n        console.log('Upload event:', e);\n        if (Array.isArray(e)) {\n            return e;\n        }\n        return e && e.fileList;\n    };\n \n    beforeUpload = () => false;\n \n    render() {\n        const { getFieldDecorator } = this.props.form;\n        const formItemLayout = {\n            labelCol: { span: 6 },\n            wrapperCol: { span: 14 },\n        };\n        return (\n            <Form {...formItemLayout}>\n                <Form.Item label=\"Message\">\n                    {getFieldDecorator('message', {\n                        rules: [{ required: true, message: 'Please input message.' }],\n                    })(<Input />)}\n                </Form.Item>\n                <Form.Item label=\"Image/Video\">\n                    <div className=\"dropbox\">\n                        {getFieldDecorator('image', {\n                            valuePropName: 'fileList',\n                            getValueFromEvent: this.normFile,\n                            rules: [{ required: true, message: 'Please select an image.' }]\n                        })(\n                            <Upload.Dragger name=\"files\" beforeUpload={this.beforeUpload}>\n                                <p className=\"ant-upload-drag-icon\">\n                                    <Icon type=\"inbox\" />\n                                </p>\n                                <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\n                                <p className=\"ant-upload-hint\">Support for a single or bulk upload.</p>\n                            </Upload.Dragger>,\n                        )}\n                    </div>\n                </Form.Item>\n            </Form>\n        );\n    }\n }\n \n const CreatePostForm = Form.create()(NormalCreatePostForm);\n \n\nexport default CreatePostForm;","import React, { Component } from 'react';\nimport { Modal, Button, message } from 'antd';\n\nimport { API_ROOT, AUTH_HEADER, TOKEN_KEY, POS_KEY } from '../constants';\nimport CreatePostForm from './CreatePostForm';\n\n\n\nclass CreatePostButton extends Component {\n    state = {\n        visible: false,\n        confirmLoading: false,\n    };\n \n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n \n    handleOk = () => {\n        console.log('ok');\n\n        this.form.validateFields((err, values) => {\n            console.log(values);\n            if (!err) {\n                const token = localStorage.getItem(TOKEN_KEY);\n                const { lat, lon } = JSON.parse(localStorage.getItem(POS_KEY));\n \n                const formData = new FormData();\n                formData.set('lat', lat);\n                formData.set('lon', lon);\n                formData.set('message', values.message);\n                formData.set('image', values.image[0].originFileObj);\n \n                this.setState({ confirmLoading: true });\n                fetch(`${API_ROOT}/post`, {\n                    method: 'POST',\n                    headers: {\n                        Authorization: `${AUTH_HEADER} ${token}`\n                    },\n                    body: formData,\n                })\n                    .then((response) => {\n                        if (response.ok) {\n                            return this.props.loadNearbyPosts();\n                        }\n                        throw new Error('Failed to create post.');\n                    })\n                    .then(() => {\n                        this.setState({ visible: false, confirmLoading: false });\n                        this.form.resetFields();\n                        message.success('Post created successfully!');\n                    })\n                    .catch((e) => {\n                        console.error(e);\n                        message.error('Failed to create post.');\n                        this.setState({ confirmLoading: false });\n                    });\n            }\n        });\n    };\n \n  \n \n    handleCancel = () => {\n        console.log('Clicked cancel button');\n        this.setState({\n            visible: false,\n        });\n    };\n\n    getFormRef = (formInstance) => {\n        this.form = formInstance;\n    }\n \n\n    render() {\n        const { visible, confirmLoading } = this.state;\n        return (\n            <div>\n               <Button type=\"primary\" onClick={this.showModal} className=\"Create-New-Post\">\n                   Create New Post\n               </Button>\n               <Modal\n                   title=\"Create New Post\"\n                   visible={visible}\n                   onOk={this.handleOk}\n                   okText='Create'\n                   confirmLoading={confirmLoading}\n                   onCancel={this.handleCancel}\n               >\n                   <CreatePostForm ref={this.getFormRef}/>\n               </Modal>\n\n                \n            </div>\n        );\n    }\n}\n\nexport default CreatePostButton;","import React, { Component } from 'react';\nimport { Marker, InfoWindow } from 'react-google-maps';\nimport PropTypes from 'prop-types';\n\nimport blueMarkerUrl from '../assets/images/blue-marker.svg';\n\nclass AroundMarker extends React.Component {\n    static propTypes = {\n        post: PropTypes.object.isRequired,\n    }\n \n    state = {\n        isOpen: false,\n    }\n \n    handleToggle = () => {\n        this.setState((prevState) => ({ isOpen: !prevState.isOpen }));\n    }\n \n    render() {\n        const { user, message, url, location, type } = this.props.post;\n        const { lat, lon } = location;\n        \n        const isImagePost = type === 'image';\n        const customIcon = isImagePost ? undefined : {\n            url: blueMarkerUrl,\n            scaledSize: new window.google.maps.Size(26, 41),\n        };\n \n\n        return (\n            <Marker\n               position={{ lat, lng: lon }}\n               onMouseOver={isImagePost ? this.handleToggle : undefined}\n               onMouseOut={isImagePost ? this.handleToggle : undefined}\n               onClick={isImagePost ? undefined: this.handleToggle}\n               icon={customIcon}\n           >\n               {this.state.isOpen ? (\n                   <InfoWindow>\n                       <div>\n                           {isImagePost\n                               ? <img src={url} alt={message} className=\"around-marker-image\"/>\n                               : <video src={url} controls className=\"around-marker-video\"/>}\n                           <p>{`${user}: ${message}`}</p>\n                       </div>\n                   </InfoWindow>\n               ) : null}\n\n            </Marker>\n        );\n    }\n }\n \n\nexport default AroundMarker;","import React, { Component } from 'react';\nimport { POS_KEY } from '../constants';\n\n\nimport {\n    withScriptjs,\n    withGoogleMap,\n    GoogleMap,\n } from \"react-google-maps\";\n \n import AroundMarker from './AroundMarker';\n\n class NormalAroundMap extends Component {\n    getMapRef = (mapInstance) => {\n        this.map = mapInstance;\n        window.map = mapInstance;\n    }\n \n    reloadMarker = () => {\n        const center = this.getCenter();\n        const radius = this.getRadius();\n        this.props.loadPostsByTopic(center, radius);\n\n    }\n \n    getCenter() {\n        const center = this.map.getCenter();\n        return { lat: center.lat(), lon: center.lng() };\n    }\n \n    getRadius() {\n        const center = this.map.getCenter();\n        const bounds = this.map.getBounds();\n        if (center && bounds) {\n            const ne = bounds.getNorthEast();\n            const right = new window.google.maps.LatLng(center.lat(), ne.lng());\n            return 0.001 * window.google.maps.geometry.spherical.computeDistanceBetween(center, right);\n        }\n    }\n \n    render() {\n        const { lat, lon } = JSON.parse(localStorage.getItem(POS_KEY));\n        return (\n            <GoogleMap\n                ref={this.getMapRef}\n                defaultZoom={11}\n                defaultCenter={{ lat, lng: lon }}\n                onDragEnd={this.reloadMarker}\n                onZoomChanged={this.reloadMarker}\n            >\n                {this.props.posts.map((post) => <AroundMarker post={post} key={post.url} />)}\n            </GoogleMap>\n        );\n    }\n }\n \n const AroundMap = withScriptjs(withGoogleMap(NormalAroundMap));\n \n\nexport default AroundMap;","import React, {Component} from 'react';\n\n\nimport { Tabs, Spin, Row, Col, Radio } from 'antd';\nimport { GEO_OPTIONS, POS_KEY, API_ROOT, AUTH_HEADER, TOKEN_KEY, POST_TYPE_IMAGE,\n    POST_TYPE_VIDEO,\n    POST_TYPE_UNKNOWN,\n    TOPIC_AROUND,\n    TOPIC_FACE\n \n  } from '../constants'\n\nimport Gallery from './Gallery';\nimport CreatePostButton from './CreatePostButton';\nimport AroundMap from './AroundMap';\n\nconst { TabPane } = Tabs;\n\nexport class Home extends React.Component {\n   state = {\n       isLoadingGeoLocation: false,\n       isLoadingPosts: false,\n       error: '',\n       posts: [],\n   }\n\n     // When the component is rendered to the DOM for the first time\n   // such as at page load we call the Geolocation API to determine\n   // a latitude and longitude for the browser\n   componentDidMount() {\n       console.log(navigator.geolocation);\n       if (\"geolocation\" in navigator) {\n           this.setState({ isLoadingGeoLocation: true, error: '' });\n           navigator.geolocation.getCurrentPosition(\n               this.onSuccessLoadGeoLocation,\n               this.onFailedLoadGeoLocation,\n               GEO_OPTIONS,\n           );\n       } else {\n           this.setState({ error: 'Geolocation is not supported.'});\n       }\n   }\n\n   onSuccessLoadGeoLocation = (position) => {\n       console.log(position);\n       const { latitude, longitude } = position.coords;\n       localStorage.setItem(POS_KEY, JSON.stringify({ lat: latitude, lon: longitude }));\n       this.setState({ isLoadingGeoLocation: false, error: '' });\n       this.loadNearbyPosts();\n   }\n\n   onFailedLoadGeoLocation = () => {\n       this.setState({ isLoadingGeoLocation: false, error: 'Failed to load geo location.' });\n   }\n\n   loadNearbyPosts = () => {\n       const { lat, lon } = JSON.parse(localStorage.getItem(POS_KEY));\n       const token = localStorage.getItem(TOKEN_KEY);\n       this.setState({ isLoadingPosts: true, error: '' });\n       fetch(`${API_ROOT}/search?lat=${lat}&lon=${lon}&range=20000`, {\n           method: 'GET',\n           headers: {\n               Authorization: `${AUTH_HEADER} ${token}`\n           }\n       })\n           .then((response) => {\n               if (response.ok) {\n                   return response.json();\n               }\n               throw new Error('Failed to load post.');\n           })\n           .then((data) => {\n               console.log(data);\n               this.setState({ posts: data ? data : [], isLoadingPosts: false });\n           })\n           .catch((e) => {\n               console.error(e);\n               this.setState({ isLoadingPosts: false, error: e.message });\n           });\n   }\n\n   \n   renderImagePosts() {\n    const { posts } = this.state;\n    const images = posts\n        .filter((post) => post.type === POST_TYPE_IMAGE)\n        .map((post) => {\n            return {\n                user: post.user,\n                src: post.url,\n                thumbnail: post.url,\n                caption: post.message,\n                thumbnailWidth: 400,\n                thumbnailHeight: 300,\n            };\n        });\n    return <Gallery images={images}/>\n}\n\n    renderVideoPosts() {\n        const { posts } = this.state;\n        return (\n            <Row gutter={30}>\n                {\n                    posts\n                        .filter((post) => [POST_TYPE_VIDEO,    POST_TYPE_UNKNOWN].includes(post.type))\n                        .map((post) => (\n                            <Col span={6} key={post.url}>\n                                <video src={post.url} controls={true} className=\"video-block\"/>\n                                <p>{post.user}: {post.message}</p>\n                            </Col>\n                        ))\n                }\n            </Row>\n        );\n    }\n\n    renderPosts(type) {\n        const { error, isLoadingGeoLocation, isLoadingPosts, posts } = this.state;\n        if (error) {\n            return error;\n        } else if (isLoadingGeoLocation) {\n            return <Spin tip=\"Loading geo location...\"/>;\n        } else if (isLoadingPosts) {\n            return <Spin tip=\"Loading posts...\"/>\n        } else if (posts.length > 0) {\n            return type === POST_TYPE_IMAGE ? this.renderImagePosts() : this.renderVideoPosts();\n        } else {\n            return 'No nearby posts';\n        }\n    }\n\n    handleTopicChange = (e) => {\n        const topic = e.target.value;\n        this.setState({ topic });\n        if (topic === TOPIC_AROUND) {\n            this.loadNearbyPosts();\n        } else {\n            this.loadFacesAroundTheWolrd();\n        }\n    }\n \n    loadFacesAroundTheWolrd = () => {\n        const token = localStorage.getItem(TOKEN_KEY);\n        this.setState({ isLoadingPosts: true, error: '' });\n        return fetch(`${API_ROOT}/cluster?term=face`, {\n            method: 'GET',\n            headers: {\n                Authorization: `${AUTH_HEADER} ${token}`,\n            }\n        })\n            .then((response) => {\n                if (response.ok) {\n                    return response.json();\n                }\n                throw new Error('Failed to load posts');\n            })\n            .then((data) => {\n                console.log(data);\n                this.setState({ posts: data ? data : [], isLoadingPosts: false });\n            })\n            .catch((e) => {\n                console.error(e);\n                this.setState({ isLoadingPosts: false , error: e.message });\n            });\n    }\n \n    loadPostsByTopic = (center, radius) => {\n        if (this.state.topic === TOPIC_AROUND) {\n            return this.loadNearbyPosts(center, radius);\n        } else {\n            return this.loadFacesAroundTheWolrd();\n        }\n    }\n \n \n\n   render() {\n        const operations = <CreatePostButton loadNearbyPosts={this.loadPostsByTopic}/>;\n\n        return (\n            <div>\n                <Radio.Group onChange={this.handleTopicChange} value={this.state.topic}>\n                   <Radio value={TOPIC_AROUND}>Posts Around Me</Radio>\n                   <Radio value={TOPIC_FACE}>Faces Around The World</Radio>\n                </Radio.Group>\n\n                <Tabs tabBarExtraContent={operations} className=\"main-tabs\">\n                    <TabPane tab=\"Image Posts\" key=\"1\">\n                        {this.renderImagePosts(POST_TYPE_IMAGE)}\n                    </TabPane>\n                    <TabPane tab=\"Video Posts\" key=\"2\">\n                        {this.renderPosts(POST_TYPE_VIDEO)}\n                    </TabPane>\n                    <TabPane tab=\"Map\" key=\"3\">\n                    <AroundMap\n                        googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyD3CEh9DXuyjozqptVB5LA-dN7MxWWkr9s&v=3.exp&libraries=geometry,drawing,places\"\n                        loadingElement={<div style={{ height: `100%` }} />}\n                        containerElement={<div style={{ height: `600px` }} />}\n                        mapElement={<div style={{ height: `100%` }} />}\n                        posts={this.state.posts}\n                        loadPostsByTopic={this.loadPostsByTopic}\n                    />\n\n                    </TabPane>\n                </Tabs>\n            </div>   \n           \n        );\n   }\n}\n\n\n// class Home extends Component {\n//    render() {\n//        return (\n//            <div>\n//                This is Home\n//            </div>\n//        );\n//    }\n// }\n\n\n\nexport default Home;\n","import React, {Component} from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { Register } from './Register';\nimport { Login } from './Login';\nimport Home from './Home';\n\nclass Main extends Component {\n   getLogin = ()=>{\n       return this.props.isLoggedIn ? <Redirect to=\"/home\"/> : \n       <Login handleLoginSucceed={this.props.handleLoginSucceed}/>;\n       \n   }\n   getHome = ()=>{\n       return this.props.isLoggedIn ? <Home/> : <Redirect to=\"/login\"/>;\n   }\n   render() {\n       return (\n           <div className=\"main\">\n               <Switch>\n                   <Route path=\"/login\" render={this.getLogin}/>\n                   <Route path=\"/register\" component={Register}/>\n                   <Route path=\"/home\" render={this.getHome}/>\n                   <Route render={this.getLogin}/>\n               </Switch>\n           </div>\n       );\n   }\n}\nexport default Main;\n","import React, {Component} from 'react';\nimport TopBar from './TopBar';\nimport Main  from './Main';\nimport { TOKEN_KEY } from '../constants.js';\n\nimport '../styles/App.css';\n\nclass App extends React.Component {\n  state = {\n    isLoggedIn: Boolean(localStorage.getItem(TOKEN_KEY)),\n  }\n\n  handleLoginSucceed = (token) => {\n    localStorage.setItem(TOKEN_KEY, token)\n    this.setState({ isLoggedIn: true });\n  }\n\n  handleLogout = () => {\n    localStorage.removeItem(TOKEN_KEY);\n    this.setState({ isLoggedIn: false });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <TopBar handleLogout={this.handleLogout} isLoggedIn={this.state.isLoggedIn}/>\n        <Main handleLoginSucceed={this.handleLoginSucceed} isLoggedIn={this.state.isLoggedIn}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n   <BrowserRouter>\n       <App />\n   </BrowserRouter>\n   ,\n   document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}